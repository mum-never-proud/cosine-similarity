{"version":3,"sources":["cosine-similarity.js"],"names":["dotProduct","x","y","i","len","Math","min","length","result","normalize","sqrt","reduce","a","b","assertArray","constructor","name","TypeError","module","exports","Number","toFixed"],"mappings":";AAAA,SAASA,EAAWC,EAAGC,GAIdC,IAHDC,IAAAA,EAAMC,KAAKC,IAAIL,EAAEM,OAAQL,EAAEK,QAC7BC,EAAS,EAAGL,EAAI,EAEbA,EAAIC,EAAKD,IACdK,GAAUP,EAAEE,GAAKD,EAAEC,GAGdK,OAAAA,EAGT,SAASC,EAAUR,GACVI,OAAAA,KAAKK,KAAKT,EAAEU,OAAO,SAACC,EAAGC,GAAMD,OAAAA,EAAIC,EAAIA,GAAG,IAGjD,SAASC,EAAYb,GACf,IAACA,GAA4B,UAAvBA,EAAEc,YAAYC,KAChB,MAAA,IAAIC,UAAU,uEAIxBC,OAAOC,QAAU,SAAUlB,EAAGC,GAIrBkB,OAHPN,EAAYb,GACZa,EAAYZ,GAELkB,QACJpB,EAAWC,EAAGC,IAAMO,EAAUR,GAAKQ,EAAUP,KAAKmB,QAAQ","file":"cosine-similarity.js","sourceRoot":"..","sourcesContent":["function dotProduct(x, y) {\n  const len = Math.min(x.length, y.length);\n  let result = 0, i = 0;\n\n  for (; i < len; i++) {\n    result += x[i] * y[i];\n  }\n\n  return result;\n}\n\nfunction normalize(x) {\n  return Math.sqrt(x.reduce((a, b) => a + b * b, 0));\n}\n\nfunction assertArray(x) {\n  if (!x || x.constructor.name !== 'Array') {\n    throw new TypeError('cosine similarity can be computed only between two array of numbers');\n  }\n}\n\nmodule.exports = function (x, y) {\n  assertArray(x);\n  assertArray(y);\n\n  return Number(\n    (dotProduct(x, y) / (normalize(x) * normalize(y))).toFixed(3)\n  );\n}\n"]}